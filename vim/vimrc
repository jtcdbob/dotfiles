""""""" Vundle """"""""
set nocompatible " Set compatibility to Vim only.
filetype off " Helps force plug-ins to load correctly when it is turned back on below.

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'bling/vim-airline'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'kien/ctrlp.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'tpope/vim-commentary'
Plugin 'pangloss/vim-javascript'
Plugin 'maksimr/vim-jsbeautify'
Plugin 'derekwyatt/vim-scala'
Plugin 'mitsuhiko/vim-python-combined'
Plugin 'tpope/vim-fugitive'
Plugin 'luochen1990/rainbow'
Plugin 'airblade/vim-gitgutter'
Plugin 'Yggdroot/indentLine'
Plugin 'junegunn/fzf'
Plugin 'easymotion/vim-easymotion'
call vundle#end()            " required
filetype plugin indent on    " required

""""""" Color Scheme """"""""
colorscheme gruvbox
" colorscheme molokai

""""""" Basics """"""""
set modelines=0 " Turn off modelines
" Editor and view
set wrap " Automatically wrap text that extends beyond the screen length.
set textwidth=125
set number " Show line numbers
set formatoptions=tcqrn1
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set noshiftround
set backspace=indent,eol,start
set linespace=0 " No extra spaces between rows
set nostartofline
set ruler " Show the cursor position
set background=dark
set mouse=a
set cursorline
set wildmode=longest,list,full
set wildmenu

" Text display
set list
set listchars=tab:›\ ,trail:•,extends:#,nbsp:. " Display different types of white spaces.
set encoding=utf-8 " Encoding
scriptencoding utf10
set guioptions-=r
set guioptions-=L
set matchpairs+=<:> " Highlight matching pairs of brackets. Use the '%' character to jump between them.
set spell spelllang=en_us
syntax on " Turn on syntax highlighting
" Scrolling
set scrolloff=5 " Display 5 lines above/below the cursor when scrolling with a mouse.
set ttyfast " Speed up scrolling in Vim
set lazyredraw
" Status bar
set laststatus=2
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ [BUFFER=%n]\ %{strftime('%c')} " Set status line display
set title " Show the filename in the window titlebar.
" Display options
set showmode
set showcmd
" Folding
set foldenable
set foldlevelstart=10
set foldnestmax=10
set foldmethod=indent
" Map the <Space> key to toggle a selected fold opened/closed.
nnoremap <silent> <Space> @=(foldlevel('.')?'za':"\<Space>")<CR>
vnoremap <Space> zf

" Search
set hlsearch " Highlight matching search patterns
set incsearch " Enable incremental search
set ignorecase " Include matching uppercase words with lowercase search term
set smartcase " Include only uppercase words with uppercase search term
set showmatch
" Better search and replace using /keyword + cs + .n
" vnoremap <silent> s //e<C-r>=&selection=='exclusive'?'+1':''<CR><CR>\:<C-u>call histdel('search',-1)<Bar>let @/=histget('search',-1)<CR>gv
omap s :normal vs<CR>
" Splitting
set splitbelow
set splitright
set history=100 " Increase history from 20 default to 1000
" System
set antialias
set clipboard=unnamed
set noerrorbells " Disable error bells.
" Automatically save and load folds
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview"
set nobackup
set noswapfile
set autoread

""""""" Key remapping """"""""
nnoremap <CR> G
nnoremap <BS> gg
nnoremap ; :
nnoremap j gj
nnoremap k gk
nnoremap B ^
nnoremap ^ <nop>
nnoremap E $
nnoremap $ <nop>
nnoremap J 10j
nnoremap K 10k
nnoremap gV `[V`]
inoremap jk <esc>

" Map Leader
let mapleader = "\<Space>"
nnoremap <Leader>w :w<CR>
" nnoremap <Leader><space> za
" nmap <leader>cd :cd %:h<CR>
" nmap <leader>lcd :lcd %:h<CR>
" nmap <silent> <leader>vimrc :e ~/.vimrc<CR>
" map <leader>y "*y
" map <leader>p "*p
" vmap <Leader>y "+y
" vmap <Leader>d "+d
" nmap <Leader>p "+p
" nmap <Leader>P "+P
" vmap <Leader>p "+p
" vmap <Leader>P "+P
" vnoremap <silent> y y`]
" vnoremap <silent> p p`]
" nnoremap <silent> p p`]
" nnoremap <leader>u :GundoToggle<CR>
" nnoremap <leader>s :mksession<CR>

""""""" Language Specific """"""""
autocmd FileType python set sw=4
autocmd FileType python set ts=4
autocmd FileType python set sts=4
autocmd FileType go set sw=4
autocmd FileType go set tabstop=4
autocmd FileType go set sts=0
autocmd FileType go set expandtab
autocmd FileType go set smarttab
autocmd FileType javascript set sw=2
autocmd FileType javascript set ts=2
autocmd FileType javascript set sts=2
autocmd FileType html set sw=2
autocmd FileType c set sw=2
autocmd FileType c set ts=2
autocmd FileType c set sts=2
autocmd FileType html set ts=2
autocmd FileType html set sts=4

""""""" NERDTree """"""""
" nmap <C-u> :NERDTreeToggle<CR>
" nmap <C-c> :NERDTreeCWD<CR>
map <C-n> :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$']

""""""" CtrlP """"""""
let g:ctrlp_cmd='CtrlP :pwd'

""""""" Rainbow """"""""
let g:rainbow_active = 1 "set to 0 if you want to enable it later via :RainbowToggle

""""""" Indent Line """"""""
let g:indentLine_char_list = ['|', '¦', '┆', '┊']

""""""" Fzf """"""""
nnoremap <silent> <leader>t :FZF<cr>
nnoremap <silent> <leader>T :FZF ~<cr>

""""""" EasyMotion """"""""
" Move to line
map <Leader>l <Plug>(easymotion-bd-jk)
nmap <Leader>l <Plug>(easymotion-overwin-line)

" Move to word
map  <Leader>f <Plug>(easymotion-bd-w)
nmap <Leader>f <Plug>(easymotion-overwin-w)
